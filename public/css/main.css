body,html{
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  scroll-behavior: smooth;
}

*{
  font-family: Quicksand;
  letter-spacing: 1px;
}
nav,ul{
  padding: 10px;
  padding-bottom: 0;
  text-align: center;
}
li{
  list-style-type: none;
}
input{
  padding: .5em;
  border:1px solid #E8E8E8;
  background-color: inherit;
}
label{
  font-size: 15px;
  font-weight: bold;
}
select,option{
  background-color: rgba(240,240,240,0.5);
  border:none;
  padding: 10px;
}
button:active{
  background-color: red;
}
.nav-item {
  display: inline-block;
}
#map{
  display: inline-block;
  height: 80%;
  width: 65%;
  vertical-align: middle;
}
.leaflet-routing-container{
  height: 20px;
  width: 20px;
  opacity: 0.5s;
  transition: all 0.3s ease;
  overflow:hidden;
}
.leaflet-routing-container:hover{
  height: auto;
  width: 300px;
  opacity: 1;
}
.leaflet-popup-content-wrapper{
  width: 400px;
  height: 450px;
  padding: 1em;
  background-color: rgba(240,240,240,0.7);
}
.leaflet-popup-tip{
  visibility: hidden;
}
.nav_events{
  width: 430px;
  height: 80%;
  overflow: scroll;
  display: inline-block;
  margin-top: 10px;
  vertical-align: middle;
  border: 1px solid grey;
  /* margin-left: 100px; */
}
.event_item{

}
.event_wrapper{

  text-align:center;
  height: 100px;
  width: 400px;
  background-color: white;
  margin-bottom: 10px;
  -webkit-box-shadow: 10px 10px 41px 0px rgba(237,237,237,1);
  -moz-box-shadow: 10px 10px 41px 0px rgba(237,237,237,1);
  box-shadow: 10px 10px 41px 0px rgba(237,237,237,1);
}

.event_wrapper > img,p,span{
  display: inline-block;
}
.event_wrapper h2 {
  font-size: 1em;
}
.event_img{
  float: left;
  width: 100px;
  height: 100px;
}
.event_date{
  color: black;
  font-weight: bold;
}
.detail{
  color: #E8E8E8;
  opacity: 0.4;
  margin: auto;
}












/* idee de front-end à decommenter pour voir  */
/* #map{
  width: 100%;
  height: 100%;
}
.btn-group{
    width: 20%;
  display: block !important;
}
.btn-group > .btn{
  width: 100%;
}
.floating-group{
  width: 20%;
  height: 100%;
}
.dropdown-toggle{
  position: absolute;
  z-index: 100;
  margin-bottom: : 100px;
} */


/* .active{
  background-color: red !important;
} */
.marker-cluster-small {
background-color: rgba(218, 94, 94, 0.6);
}
.marker-cluster-small div {
background-color: rgba(226, 36, 36, 0.6);
}
.marker-cluster-medium {
background-color: rgba(241, 211, 87, 0.6);
}
.marker-cluster-medium div {
background-color: rgba(240, 194, 12, 0.6);
}

.marker-cluster-large {
background-color: rgba(253, 156, 115, 0.6);
}
.marker-cluster-large div {
background-color: rgba(241, 128, 23, 0.6);
}
/*
// function onEachFeature(feature, layer) {
//     if (feature.properties && feature.properties.popupContent) {
//         layer.bindPopup(feature.properties.popupContent);
//         layer.setIcon(markerInfo).addTo(map);
//
//     };
// };
//
var markers = L.markerClusterGroup();
var markersTab = [];
var id=0;
var nearest = 600000;
var nearestP = null;

var mapboxTiles = L.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {
    attribution: '<a href="http://www.mapbox.com/about/maps/" target="_blank">24ème</a>'
});

var map = L.map('map', {
    center: [48.853, 2.333],
    zoom: 9,
    layers: mapboxTiles
});

var festivalIcon = L.AwesomeMarkers.icon({
prefix: 'fa',
markerColor: 'black',
icon: 'glass'
});

var culturelIcon = L.AwesomeMarkers.icon({
prefix: 'fa',
markerColor: 'red',
icon: 'comments'
});

var loisirsIcon = L.AwesomeMarkers.icon({
prefix: 'fa',
markerColor: 'green',
icon: 'coffee'
});

$('#btn_1km').click(function(){
  calert('ici');
});
$('#btn_2km').click(function(){
  clearKilometers();
  putKilometers();
  clearKilometer(tab1km);
});
$('#btn_3km').click(function(){
  clearKilometers();
  putKilometers();
  clearKilometer(tab1km);
});
$('#btn_4km').click(function(){
  clearKilometers();
  putKilometers();
  clearKilometer(tab1km);
});
$('#btn_5km').click(function(){
  clearKilometers();
  putKilometers();
  clearKilometer(tab1km);
});
$('#btn_6km').click(function(){
  clearKilometers();
  putKilometers();
  clearKilometer(tab1km);
});

var events = $.getJSON('js/eventsGeoJson.json');
events.then(function(data) {
    var events = L.geoJson(data);
    var culturel= L.geoJson(data, {
        filter: function(feature, layer) {
            return feature.properties.category == "Culturel";

        },
        pointToLayer: function(feature, latlng) {
          id = markersTab.length - 1;

            var marker = L.marker(latlng, {
                icon: culturelIcon
          }).on('click', function() {
             this.bindPopup(feature.properties.title+ "<hr>"+feature.properties.date+ "<hr>"+feature.properties.hour+ "<hr>"+feature.properties.price + "<hr>"+feature.properties.address + "<hr>"+"<a href="+feature.properties.url+ "><img width='350px' height='100px' src="+feature.properties.image+"></a>"+ "<hr>" +"<a href="+feature.properties.url+ ">\ud83d\ude33Plus de détails</a>").openPopup();
            });
            marker._id = id;
            markers.addLayer(marker);
            markersTab.push(marker);
          //  return marker;
        }
    });
    var festival = L.geoJson(data, {
        filter: function(feature, layer) {
            return feature.properties.category == "Festival";

        },
        pointToLayer: function(feature, latlng) {
            id = markersTab.length - 1;

            var marker = L.marker(latlng, {
                icon: festivalIcon
          }).on('click', function() {
               this.bindPopup(feature.properties.title+ "<hr>"+feature.properties.date+ "<hr>"+feature.properties.hour+ "<hr>"+feature.properties.price + "<hr>"+feature.properties.address + "<hr>"+"<a href="+feature.properties.url+ "><img width='350px' height='100px' src="+feature.properties.image+"></a>"+ "<hr>" +"<a href="+feature.properties.url+ ">\ud83d\ude33Plus de détails</a>").openPopup();
            });
            marker._id = id;
            markers.addLayer(marker);
            markersTab.push(marker);
          //  return marker;
        }
    });


    var others = L.geoJson(data, {
        filter: function(feature, layer) {
            return feature.properties.category != "Culturel" || "Loisirs" || "Festival" || document.getElementById("arrondissement").value;
        },
        pointToLayer: function(feature, latlng) {
            id = markersTab.length - 1;

            var marker = L.marker(latlng, {
    // <img src="feature.properties.image">" + "</a>"
    // "<a href=feature.properties.image>"
            }).on('click', function() {
                this.bindPopup(feature.properties.title+ "<hr>"+feature.properties.date+ "<hr>"+feature.properties.hour+ "<hr>"+feature.properties.price + "<hr>"+feature.properties.address + "<hr>"+"<a href="+feature.properties.url+ "><img width='350px' height='100px' src="+feature.properties.image+"></a>"+ "<hr>" +"<a href="+feature.properties.url+ ">\ud83d\ude33Plus de détails</a>").openPopup();
            });
            marker._id = id;
            markers.addLayer(marker);
            markersTab.push(marker);
        //    return marker;
        }
    });
    var loisirs = L.geoJson(data, {
        filter: function(feature, layer) {
            return feature.properties.category == "Loisirs";
        },
        pointToLayer: function(feature, latlng) {
          id = markersTab.length - 1;

            var marker = L.marker(latlng, {
                icon: loisirsIcon
          }).on('click', function() {
              this.bindPopup(feature.properties.title+ "<hr>"+feature.properties.date+ "<hr>"+feature.properties.hour+ "<hr>"+feature.properties.price + "<hr>"+feature.properties.address + "<hr>"+"<img width='350px' height='100px' src="+feature.properties.image+">" +"<hr>"+feature.properties.description + "<hr>" +"<a href="+feature.properties.url+ ">\ud83d\ude33Plus de détails</a>").openPopup();
            });
            marker._id = id;
            markers.addLayer(marker);
            markersTab.push(marker);
        }
    });


    var arrondissement = L.geoJson(data, {
        filter: function(feature, layer) {
            return feature.properties.arrondissement == document.getElementById("arrondissement").value;
        },
        pointToLayer: function(feature, latlng) {
            id = markersTab.length - 1;

            var marker =  L.marker(latlng, {
            }).on('click', function() {
               this.bindPopup(feature.properties.title+ "<hr>"+feature.properties.date+ "<hr>"+feature.properties.hour+ "<hr>"+feature.properties.price + "<hr>"+feature.properties.address + "<hr>"+"<a href="+feature.properties.url+ "><img width='350px' height='100px' src="+feature.properties.image+"></a>"+ "<hr>" +"<a href="+feature.properties.url+ ">\ud83d\ude33Plus de détails</a>").openPopup();
            });
            marker._id = id;
            markers.addLayer(marker);
            markersTab.push(marker);
          //  return marker;
        }
    });

//hono essai pour les dates
//     var input_date_start = document.getElementById("start");
//     var input_date_end = document.getElementById("end");
    var date = L.geoJson(data, {
        filter: function(feature, layer) {
            return feature.properties.date >=input_date_start.value
            // && feature.properties.date <=input_date_end.value
        },
        pointToLayer: function(feature, latlng) {
            id = markersTab.length - 1;

            var marker = L.marker(latlng, {
            }).on('click', function() {
                this.bindPopup(feature.properties.title+ "<hr>"+feature.properties.date+ "<hr>"+feature.properties.hour+ "<hr>"+feature.properties.price + "<hr>"+feature.properties.address + "<hr>"+"<a href="+feature.properties.url+ "><img width='350px' height='100px' src="+feature.properties.image+"></a>"+ "<hr>" +"<a href="+feature.properties.url+ ">\ud83d\ude33Plus de détails</a>").openPopup();
            });
            marker._id = id;
            markers.addLayer(marker);
            markersTab.push(marker);
            //return marker;
        }
    });
// //fin essai dates

    $("#others").click(function() {
        map.addLayer(others)
        map.removeLayer(loisirs)
        map.removeLayer(festival)
        map.removeLayer(culturel)
        map.removeLayer(arrondissement)
        map.removeLayer(date)
    });
    $("#culturel").click(function() {
        map.addLayer(culturel)
        map.removeLayer(loisirs)
        map.removeLayer(festival)
        map.removeLayer(others)
        map.removeLayer(arrondissement)
        map.removeLayer(date)
    });
    $("#loisirs").click(function() {
        map.addLayer(loisirs)
        map.removeLayer(culturel)
        map.removeLayer(festival)
        map.removeLayer(others)
        map.removeLayer(arrondissement)
        map.removeLayer(date)
    });
    $("#festival").click(function() {
        map.addLayer(festival)
        map.removeLayer(culturel)
        map.removeLayer(loisirs)
        map.removeLayer(others)
        map.removeLayer(arrondissement)
        map.removeLayer(date)
    });

    $("#all").click(function() {
        map.addLayer(loisirs)
        map.addLayer(culturel)
        map.addLayer(festival)
        map.addLayer(others)
        map.addLayer(arrondissement)
        map.addLayer(date)
    });
    document.getElementById("arrondissement").addEventListener("keyup", function(event) {   //ne s'execute qu'une fois
        // alert(input.value);
        map.addLayer(arrondissement)
        map.removeLayer(culturel)
        map.removeLayer(loisirs)
        map.removeLayer(festival)
        map.removeLayer(others)
        // alert('hello');
      });
      $('#filtreDate').click(function(){
        // alert(date);
        map.addLayer(date)
        map.removeLayer(arrondissement)
        map.removeLayer(culturel)
        map.removeLayer(loisirs)
        map.removeLayer(festival)
        map.removeLayer(others)
      });



});




map.locate({setView: true, maxZoom: 40});




function onLocationFound(e) {
//    var radius = e.accuracy; //  L.circle(e.latlng, radius).addTo(map);
    L.marker(e.latlng).addTo(map)
    //.bindPopup("Vous êtes à " + radius + " mètres de ce lieu").openPopup();
    drawData(e.latlng);
}
map.on('locationfound', onLocationFound);






function onLocationError(e) {
   map.setView([48.853, 2.333], 13);
}
map.on('locationerror', onLocationError);




function drawData(userLocation) {
   var item, o;
   var items = events.responseJSON.features;
    for (item in items) {
        var loc = new L.LatLng(items[item].geometry.coordinates[1],items[item].geometry.coordinates[0]);
        createPolyLine(loc, userLocation);
    }
    if (nearestP != null){
       L.Routing.control({
         createMarker: function() { return null; },
        waypoints: [
          L.latLng(nearestP.lat, nearestP.lng),
          L.latLng(userLocation.lat, userLocation.lng)
        ]
      }).addTo(map);

      var s = '<p>Ce lieu est à ' + (nearestP.distanceTo(userLocation)).toFixed(0) + ' km de vous.</p>';
      var marker = L.marker(nearestP).addTo(map);

      if (marker) {
          marker.bindPopup(s);
      }

    }
}

var tab1km = [];
var tab2km = [];
var tab3km = [];
var tab4km = [];
var tab5km = [];
var tab6km = [];

function createPolyLine(loc1, loc2) {
    if (Math.abs(loc1.lng - loc2.lng) > 180) {
        loc1 = loc1.wrap(179, -179);
    }
    var latlongs = [loc1, loc2];
    if(loc1.distanceTo(loc2) < nearest){
      nearest = loc1.distanceTo(loc2);

      nearestP = loc1;
    //  var marker = L.marker(loc1,{icon:loisirsIcon}).addTo(map);
    }
    console.log(loc1.distanceTo(loc2).toFixed(0));

    if(loc1.distanceTo(loc2).toFixed(0) > 0 && loc1.distanceTo(loc2).toFixed(0) <= 1000 ){
      tab1km.push(loc1);
    }
    if(loc1.distanceTo(loc2).toFixed(0) > 1000 && loc1.distanceTo(loc2).toFixed(0) <= 2000 ){
      tab2km.push(loc1);
    }
    if(loc1.distanceTo(loc2).toFixed(0) > 2000 && loc1.distanceTo(loc2).toFixed(0) <= 3000 ){
      tab3km.push(loc1);
    }
    if(loc1.distanceTo(loc2).toFixed(0) > 3000 && loc1.distanceTo(loc2).toFixed(0) <= 4000 ){
      tab4km.push(loc1);
    }
    if(loc1.distanceTo(loc2).toFixed(0) > 4000 && loc1.distanceTo(loc2).toFixed(0) <= 5000 ){
      tab5km.push(loc1);
    }
    if(loc1.distanceTo(loc2).toFixed(0) > 5000 && loc1.distanceTo(loc2).toFixed(0) <= 6000 ){
      tab6km.push(loc1);
    }

 }
 console.log(tab1km)
 console.log(tab2km)
 console.log(tab3km)
 console.log(tab4km)
 console.log(tab5km)
 console.log(tab6km)

map.addLayer(markers);

  $(document).ready(function(){
    // var scops = $.getJSON('js/eventsGeoJson.json');
    // scops.then(function(data) {

          $.getJSON('js/eventsGeoJson.json', {}, function(data) {

              var $ul = $('#ct');
              $.each(data, function(idx, item){
                for (var i = 0; i < item.length; i++) {
                  if (item[i].properties) {
                    $ul.append(
                      '<li onclick=""><div class="event_wrapper">'
                    + '<img class="event_img" src="'
                    + item[i].properties.image + '" alt="event_img">'
                    + '<p class="event_date">'
                    + item[i].properties.price + '</p>'
                    + '<h2>' + item[i].properties.title + '</h2>'
                    + '<p class="detail">' + item[i].properties.price
                    + '</p>'
                    // +'<button onclick="openMarker('+ id +')">'
                    // + 'Voir plus</button>'
                    + '<a class="detail" href="#" onclick="openMarker('+i+');">Voir plus</a>'
                    +'</div></li>')
                  }
                  // $ul.append('<li style="color:black">' + item[i]['properties']['title'] + '-' + item['class'] +'</li>')
                }
              });
          });
      });
  function openMarker(id){
     markersTab.forEach(function(marker) {
       // marker.fire('click')
     marker.fireEvent('click', {latlng:marker._latlng});
       if (marker._id == id){
            marker.fireEvent('click', {latlng:marker._latlng});
          //marker.bindPopup('Your message').addTo(map).openPopup();
        //marker.fireEvent("click");
        //console.log(marker._latlng)
  // markers.fire('click');
        //  markers.fire('click', marker);
       }
     })
  };
  function clearMarker(id) {
//    console.log(markers)
//    var new_markers = []
    markers.forEach(function(marker) {
      if (marker._id == id) map.removeLayer(marker)
      else new_markers.push(marker)
    })
    markers = new_markers
  };

  function clearKilometer(tab){
    for (var i = 0; i < tab.length; i++) {
      markers.removeLayer(tab[i]);
    };
  };
  function clearKilometers(){
    for (var i = 0; i < tab1km.length; i++) {
      markers.removeLayer(tab1km[i]);
    };
    for (var i = 0; i < tab2km.length; i++) {
      markers.removeLayer(tab2km[i]);
    };
    for (var i = 0; i < tab3km.length; i++) {
      markers.removeLayer(tab3km[i]);
    };
    for (var i = 0; i < tab4km.length; i++) {
      markers.removeLayer(tab4km[i]);
    };
    for (var i = 0; i < tab5km.length; i++) {
      markers.removeLayer(tab5km[i]);
    };
    for (var i = 0; i < tab6km.length; i++) {
      markers.removeLayer(tab6km[i]);
    };
  };

  function putKilometers(){
    for (var i = 0; i < tab1km.length; i++) {
      markers.addLayer(tab1km[i]);
    };
    for (var i = 0; i < tab2km.length; i++) {
      markers.addLayer(tab2km[i]);
    };
    for (var i = 0; i < tab3km.length; i++) {
      markers.addLayer(tab3km[i]);
    };
    for (var i = 0; i < tab4km.length; i++) {
      markers.addLayer(tab4km[i]);
    };
    for (var i = 0; i < tab5km.length; i++) {
      markers.addLayer(tab5km[i]);
    };
    for (var i = 0; i < tab6km.length; i++) {
      markers.addLayer(tab6km[i]);
    };
  };
//markers.addLayer(marker);
 */
